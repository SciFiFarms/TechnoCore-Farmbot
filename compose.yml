version: "3.5"
# You should be able to find & replace all instances of farmbot with 
# your actual_service_name. Then you just need address any places that 
# typically need changes (designated by comments)

networks:
  farmbot:
  farmbot-private:

volumes:
  farmbot:
  farmbot-db:

secrets:
  farmbot_admin_password:
    name: ${STACK_NAME:-technocore}_farmbot_admin_password
    external: true
  farmbot_farmbot_db_password:
    name: ${STACK_NAME:-technocore}_farmbot_farmbot_db_password
    external: true

services:
  # Uncomment this if Traefik will be used for routing traffick to this service.
  ingress:
    networks:
      - farmbot

  farmbot:
    deploy:
      labels:
        - traefik.frontend.rule=$FARMBOT_ROUTING_LABEL
        - traefik.frontend.priority=$FARMBOT_ROUTING_LABEL_PRIORITY
        # You'll need to set applicaiton's port here.
        - traefik.port=3000
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_farmbot
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
      #placement:
      #  constraints:
      #    - node.role == manager
      # Big services will need this modified or removed.
      #resources:
      #  limits:
      #    memory: 128M
      #  reservations:
      #    memory: 64M
    environment:
      # Sometimes you have to pass in ${DOMAIN} to enable the correct link paths to be generated.
      # Othertimes you can use http:// or https:// for the website. Weird trick.
      #- MQTT_USER=${farmbot}
      - ADMIN_USER=${ADMIN_USER}
    image: ${image_provider:-scififarms}/technocore-farmbot:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - farmbot
      - farmbot-private
    #secrets:
    #  - source: farmbot_farmbot_db_password
    #    target: farmbot_db_password
    volumes:
      # Likely need to change this
      - farmbot:/var/lib/farmbot
      - ${DEV_MOUNT_FARMBOT_SHELL_MIGRATIONS:-$EMPTY_MOUNT}

  farmbot_db:
    deploy:
      labels:
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
    #environment:
    image: ${image_provider:-scififarms}/technocore-farmbot-db:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - farmbot-private
    secrets:
      - source: farmbot_db_admin_password
        target: admin_password
      - source: farmbot_db_farmbot_password
        target: farmbot_password
    volumes:
      # Likely need to change this
      - farmbot-db:/var/lib/farmbot
